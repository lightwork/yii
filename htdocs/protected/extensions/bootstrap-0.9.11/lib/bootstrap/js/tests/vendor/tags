!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
QUnit.asyncTest	qunit.js	/^	asyncTest: function(testName, expected, callback) {$/;"	m
QUnit.deepEqual	qunit.js	/^	deepEqual: function(actual, expected, message) {$/;"	m
QUnit.equal	qunit.js	/^	equal: function(actual, expected, message) {$/;"	m
QUnit.expect	qunit.js	/^	expect: function(asserts) {$/;"	m
QUnit.load	qunit.js	/^QUnit.load = function() {$/;"	f
QUnit.module	qunit.js	/^	module: function(name, testEnvironment) {$/;"	m
QUnit.notDeepEqual	qunit.js	/^	notDeepEqual: function(actual, expected, message) {$/;"	m
QUnit.notEqual	qunit.js	/^	notEqual: function(actual, expected, message) {$/;"	m
QUnit.notStrictEqual	qunit.js	/^	notStrictEqual: function(actual, expected, message) {$/;"	m
QUnit.ok	qunit.js	/^	ok: function(a, msg) {$/;"	m
QUnit.ok.details.message	qunit.js	/^			message: msg$/;"	p
QUnit.ok.details.result	qunit.js	/^			result: a,$/;"	p
QUnit.raises	qunit.js	/^	raises: function(block, expected, message) {$/;"	m
QUnit.start	qunit.js	/^	start: function() {$/;"	m
QUnit.stop	qunit.js	/^	stop: function(timeout) {$/;"	m
QUnit.strictEqual	qunit.js	/^	strictEqual: function(actual, expected, message) {$/;"	m
QUnit.test	qunit.js	/^	test: function(testName, expected, callback, async) {$/;"	m
Test	qunit.js	/^var Test = function(name, testName, expected, testEnvironmentArg, async, callback) {$/;"	c
Test.finish	qunit.js	/^	finish: function() {$/;"	m
Test.init	qunit.js	/^	init: function() {$/;"	m
Test.run	qunit.js	/^	run: function() {$/;"	m
Test.setup	qunit.js	/^	setup: function() {$/;"	m
Test.teardown	qunit.js	/^	teardown: function() {$/;"	m
bad	qunit.js	/^		var bad = QUnit.config.reorder && defined.sessionStorage && +sessionStorage.getItem("qunit-" + this.module + "-" + this.testName);$/;"	v
config.moduleStats.all	qunit.js	/^			config.moduleStats = { all: 0, bad: 0 };$/;"	p
config.moduleStats.bad	qunit.js	/^			config.moduleStats = { all: 0, bad: 0 };$/;"	p
config.queue	qunit.js	/^	queue: [],$/;"	p
done	qunit.js	/^function done() {$/;"	f
li	qunit.js	/^			var li = id(this.id);$/;"	v
run	qunit.js	/^		function run() {$/;"	f
setTimeout	qunit.js	/^	setTimeout: typeof window.setTimeout !== "undefined",$/;"	p
sourceFromStacktrace	qunit.js	/^function sourceFromStacktrace() {$/;"	f
testId	qunit.js	/^var testId = 0;$/;"	v
validTest	qunit.js	/^function validTest( name ) {$/;"	f
