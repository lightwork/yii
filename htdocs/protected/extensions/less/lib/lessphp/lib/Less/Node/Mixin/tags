!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Call	Call.php	/^class Call$/;"	c
Definition	Definition.php	/^class Definition extends \\Less\\Node\\Ruleset$/;"	c
__construct	Call.php	/^    public function __construct($elements, $args, $index)$/;"	f
__construct	Definition.php	/^    public function __construct($name, $params, $rules, $filename, $line)$/;"	f
_arguments	Definition.php	/^        $_arguments = array();$/;"	v
args	Call.php	/^                $args = array_map(function ($a) use ($env) {$/;"	v
arguments	Call.php	/^        $this->arguments = $args;$/;"	v
arity	Definition.php	/^        $this->arity = count($params);$/;"	v
compile	Call.php	/^    public function compile($env)$/;"	f
compile	Definition.php	/^    public function compile($env, $args = array())$/;"	f
ex	Definition.php	/^        $ex = new \\Less\\Node\\Expression($_arguments);$/;"	v
filename	Definition.php	/^        $this->filename = $filename;$/;"	v
frame	Definition.php	/^        $frame = new \\Less\\Node\\Ruleset(null, array());$/;"	v
frames	Definition.php	/^        $this->frames = array();$/;"	v
index	Call.php	/^        $this->index = $index;$/;"	v
len	Definition.php	/^        $len = min(count($args), $this->arity);$/;"	v
line	Definition.php	/^        $this->line = $line;$/;"	v
lookups	Definition.php	/^        $this->lookups = array();$/;"	v
match	Call.php	/^                            $match = true;$/;"	v
match	Call.php	/^        $match = false;$/;"	v
match	Definition.php	/^    public function match($args, $env = NULL)$/;"	f
name	Definition.php	/^        $this->name = $name;$/;"	v
params	Definition.php	/^        $this->params = $params;$/;"	v
required	Definition.php	/^        $this->required = array_reduce($params, function ($count, $p) {$/;"	v
rule	Definition.php	/^                    $rule = new \\Less\\Node\\Rule($param['name'], $val->compile($env));$/;"	v
ruleSetEnv	Definition.php	/^        $ruleSetEnv = new \\Less\\Environment();$/;"	v
rules	Call.php	/^                            $rules = array_merge($rules, $mixin->compile($env, $this->arguments)->rules);$/;"	v
rules	Call.php	/^        $rules = array();$/;"	v
rules	Definition.php	/^        $this->rules = $rules;$/;"	v
ruleset	Definition.php	/^        $ruleset = new \\Less\\Node\\Ruleset(null, $this->rules);$/;"	v
selector	Call.php	/^        $this->selector =  new \\Less\\Node\\Selector($elements);$/;"	v
selectors	Definition.php	/^        $this->selectors = array(new \\Less\\Node\\Selector(array( new \\Less\\Node\\Element(null, $name))));$/;"	v
toCss	Definition.php	/^    public function toCss($context, $env)$/;"	f
